#!/bin/bash

set -e

# ------------------------------------------------------------------ Setup --
if [ -f .env ]; then
    sed -i 's/DB_HOST=.*/DB_HOST=%DB_HOST%/' .env
    sed -i 's/REDIS_HOST=.*/REDIS_HOST=%REDIS_HOST%/' .env
else
    cp .env.example .env
    echo "Please fill .env file"
    exit
fi

. .env

if [ ! -d db ]; then
    mkdir db
    mkdir db/config
    mkdir db/config/var-lib-mysql
fi

# ----------------------------------------------------------- Installation --
# -- environment:
if [ ! -f website/config/passwd ]; then
    cp slugs/passwd website/config/passwd
    sed -i "s/%USER%/$USER/" website/config/passwd
    sed -i "s/%UID%/$UID/" website/config/passwd
    sed -i "s/%GID%/`id -g $USER`/" website/config/passwd
fi

if [ ! -f website/config/php-development.ini ]; then
    cp slugs/php-development.ini website/config/php-development.ini
fi

# -- website:
if [ ! -d website/src ]; then
    if [[ $APP_TYPE == "laravel" ]]; then
        git clone https://github.com/laravel/laravel.git website/src
        cd website/src
        git checkout $(git describe --tags `git rev-list --tags --max-count=1`)
        rm -rf .git
        git init
        truncate -s0 CHANGELOG.md
        truncate -s0 readme.md
        cd ../..
        cp slugs/laravel.env website/src/.env
        cp slugs/laravel.env website/src/.env.example
        cp slugs/laravel-setup.sh website/src/setup.sh
        chmod +x website/src/setup.sh
    else
        echo "Please set a valid app type in .env file. available types: laravel"
        exit
    fi
fi

# -- apache2 configuration:

APACHE_CONF=`cat slugs/apache2-${APP_ENV}.conf | sed '/^\s*#/d' | sed '/^$/d'`

cat  <<EOF | tee website/config/apache2.conf
Mutex file:\${APACHE_LOCK_DIR} default
PidFile \${APACHE_PID_FILE}
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5
User \${APACHE_RUN_USER}
Group \${APACHE_RUN_GROUP}
HostnameLookups Off
ErrorLog \${APACHE_LOG_DIR}/error.log
LogLevel warn
IncludeOptional mods-enabled/*.load
IncludeOptional mods-enabled/*.conf
Include ports.conf
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>
<Directory /usr/share>
	AllowOverride None
	Require all granted
</Directory>
<Directory /var/www/>
	Options FollowSymLinks
	AllowOverride none
	Require all granted
    $APACHE_CONF
</Directory>
AccessFileName .htaccess
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent
IncludeOptional conf-enabled/*.conf
IncludeOptional sites-enabled/*.conf
ServerName localhost

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
EOF

# ---------------------------------------------------------- Configuration --
export APP_URL=$APP_SCHEME://$APP_DOMAIN

# ---------------------------------------------- Install required packages --
# -- apache2 as reverse proxy:
sudo apt install apache2 -y
sudo apt install jq -y

if ! hash docker-compose 2>/dev/null; then
    sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname -s`-`uname -m` \
        -o /usr/local/bin/docker-compose

    sudo chmod +x /usr/local/bin/docker-compose
fi

# ---------------------------------------------------- Docker requirements --
if ! getent group docker | grep &>/dev/null "\$USER\b"; then
    sudo usermod -aG docker $USER
fi

# ------------------------------------------------------ Docker containers --
DOCKER_PREFIX=`echo "$DOCKER_PREFIX" | tr -cd '[[:alpha:]]'`
docker-compose -p $DOCKER_PREFIX down
docker-compose -p $DOCKER_PREFIX up -d --build --scale website=$NUMBER_OF_WEBSITE_INSTANCES

host_ip=`docker inspect ${DOCKER_PREFIX}_website_1 | jq .[0].NetworkSettings.Networks.${DOCKER_PREFIX}_default.Gateway | sed 's/"//g'`

echo "---------------------------------------------- Get services ip address's --"
echo -- Website services:
__BALANCER_MEMBER__=

for service in `docker-compose -p $DOCKER_PREFIX images | sed 1,2d | awk '{ print $1 }' | grep ${DOCKER_PREFIX}_website`
do
    ip_website=`docker inspect $service | jq .[0].NetworkSettings.Networks.${DOCKER_PREFIX}_default.IPAddress | sed 's/"//g'`
    __BALANCER_MEMBER__+="BalancerMember http://${ip_website}"$'\n        '
    sed -i "s/xdebug.remote_host=.*$/xdebug.remote_host=$host_ip/" website/config/php-development.ini
    docker exec -it $service service apache2 reload
done

__BALANCER_MEMBER__="$(sed -e 's/[[:space:]]*$//' <<<${__BALANCER_MEMBER__})"

docker exec -it $service ./setup.sh

echo ----------------------------------------------------- Host Configuration --
echo -- apache2:
sudo a2enmod proxy
sudo a2enmod proxy_http
sudo a2enmod proxy_balancer
sudo a2enmod lbmethod_byrequests
sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/$APP_DOMAIN.conf
sudo truncate -s0 /etc/apache2/sites-available/$APP_DOMAIN.conf
cat  <<EOF | sudo tee /etc/apache2/sites-available/$APP_DOMAIN.conf
<VirtualHost *:80>
    ServerName $APP_DOMAIN
    <Proxy balancer://${DOCKER_PREFIX}>
        $__BALANCER_MEMBER__
    </Proxy>

    ProxyPreserveHost On
    ProxyPass / balancer://${DOCKER_PREFIX}/
    ProxyPassReverse / balancer://${DOCKER_PREFIX}/
</VirtualHost>
EOF
sudo a2ensite $APP_DOMAIN.conf
sudo systemctl restart apache2.service

echo -- /etc/hosts:
sudo sed -i "/$APP_DOMAIN/d" /etc/hosts
echo "127.0.0.1 $APP_DOMAIN" | sudo tee -a /etc/hosts

# vi: set ft=sh
